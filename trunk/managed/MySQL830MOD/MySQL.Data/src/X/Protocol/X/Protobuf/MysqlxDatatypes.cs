// Copyright (c) 2022, 2023, Oracle and/or its affiliates.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License, version 2.0, as
// published by the Free Software Foundation.
//
// This program is also distributed with certain software (including
// but not limited to OpenSSL) that is licensed under separate terms,
// as designated in a particular file or component or in included license
// documentation. The authors of MySQL hereby grant you an
// additional permission to link the program and your derivative works
// with the separately licensed software that they have included with
// MySQL.
//
// Without limiting anything contained in the foregoing, this file,
// which is part of MySQL Connector/NET, is also subject to the
// Universal FOSS Exception, version 1.0, a copy of which can be found at
// http://oss.oracle.com/licenses/universal-foss-exception.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License, version 2.0, for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mysqlx_datatypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mysqlx.Datatypes
{

  /// <summary>Holder for reflection information generated from mysqlx_datatypes.proto</summary>
  public static partial class MysqlxDatatypesReflection
  {

    #region Descriptor
    /// <summary>File descriptor for mysqlx_datatypes.proto</summary>
    public static pbr::FileDescriptor Descriptor
    {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MysqlxDatatypesReflection()
    {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZteXNxbHhfZGF0YXR5cGVzLnByb3RvEhBNeXNxbHguRGF0YXR5cGVzIsYD",
            "CgZTY2FsYXISKwoEdHlwZRgBIAIoDjIdLk15c3FseC5EYXRhdHlwZXMuU2Nh",
            "bGFyLlR5cGUSFAoMdl9zaWduZWRfaW50GAIgASgSEhYKDnZfdW5zaWduZWRf",
            "aW50GAMgASgEEjEKCHZfb2N0ZXRzGAUgASgLMh8uTXlzcWx4LkRhdGF0eXBl",
            "cy5TY2FsYXIuT2N0ZXRzEhAKCHZfZG91YmxlGAYgASgBEg8KB3ZfZmxvYXQY",
            "ByABKAISDgoGdl9ib29sGAggASgIEjEKCHZfc3RyaW5nGAkgASgLMh8uTXlz",
            "cWx4LkRhdGF0eXBlcy5TY2FsYXIuU3RyaW5nGioKBlN0cmluZxINCgV2YWx1",
            "ZRgBIAIoDBIRCgljb2xsYXRpb24YAiABKAQaLQoGT2N0ZXRzEg0KBXZhbHVl",
            "GAEgAigMEhQKDGNvbnRlbnRfdHlwZRgCIAEoDSJtCgRUeXBlEgoKBlZfU0lO",
            "VBABEgoKBlZfVUlOVBACEgoKBlZfTlVMTBADEgwKCFZfT0NURVRTEAQSDAoI",
            "Vl9ET1VCTEUQBRILCgdWX0ZMT0FUEAYSCgoGVl9CT09MEAcSDAoIVl9TVFJJ",
            "TkcQCCJ9CgZPYmplY3QSMQoDZmxkGAEgAygLMiQuTXlzcWx4LkRhdGF0eXBl",
            "cy5PYmplY3QuT2JqZWN0RmllbGQaQAoLT2JqZWN0RmllbGQSCwoDa2V5GAEg",
            "AigJEiQKBXZhbHVlGAIgAigLMhUuTXlzcWx4LkRhdGF0eXBlcy5BbnkiLQoF",
            "QXJyYXkSJAoFdmFsdWUYASADKAsyFS5NeXNxbHguRGF0YXR5cGVzLkFueSLT",
            "AQoDQW55EigKBHR5cGUYASACKA4yGi5NeXNxbHguRGF0YXR5cGVzLkFueS5U",
            "eXBlEigKBnNjYWxhchgCIAEoCzIYLk15c3FseC5EYXRhdHlwZXMuU2NhbGFy",
            "EiUKA29iahgDIAEoCzIYLk15c3FseC5EYXRhdHlwZXMuT2JqZWN0EiYKBWFy",
            "cmF5GAQgASgLMhcuTXlzcWx4LkRhdGF0eXBlcy5BcnJheSIpCgRUeXBlEgoK",
            "BlNDQUxBUhABEgoKBk9CSkVDVBACEgkKBUFSUkFZEANCGQoXY29tLm15c3Fs",
            "LmNqLngucHJvdG9idWY="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Scalar), global::Mysqlx.Datatypes.Scalar.Parser, new[]{ "Type", "VSignedInt", "VUnsignedInt", "VOctets", "VDouble", "VFloat", "VBool", "VString" }, null, new[]{ typeof(global::Mysqlx.Datatypes.Scalar.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Scalar.Types.String), global::Mysqlx.Datatypes.Scalar.Types.String.Parser, new[]{ "Value", "Collation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Scalar.Types.Octets), global::Mysqlx.Datatypes.Scalar.Types.Octets.Parser, new[]{ "Value", "ContentType" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Object), global::Mysqlx.Datatypes.Object.Parser, new[]{ "Fld" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Object.Types.ObjectField), global::Mysqlx.Datatypes.Object.Types.ObjectField.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Array), global::Mysqlx.Datatypes.Array.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Datatypes.Any), global::Mysqlx.Datatypes.Any.Parser, new[]{ "Type", "Scalar", "Obj", "Array" }, null, new[]{ typeof(global::Mysqlx.Datatypes.Any.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// a scalar
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Scalar : pb::IMessage<Scalar>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Scalar> _parser = new pb::MessageParser<Scalar>(() => new Scalar());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Scalar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Datatypes.MysqlxDatatypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar(Scalar other) : this()
    {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      vSignedInt_ = other.vSignedInt_;
      vUnsignedInt_ = other.vUnsignedInt_;
      vOctets_ = other.vOctets_ != null ? other.vOctets_.Clone() : null;
      vDouble_ = other.vDouble_;
      vFloat_ = other.vFloat_;
      vBool_ = other.vBool_;
      vString_ = other.vString_ != null ? other.vString_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar Clone()
    {
      return new Scalar(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Mysqlx.Datatypes.Scalar.Types.Type TypeDefaultValue = global::Mysqlx.Datatypes.Scalar.Types.Type.VSint;

    private global::Mysqlx.Datatypes.Scalar.Types.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Scalar.Types.Type Type
    {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set
      {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType
    {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType()
    {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "v_signed_int" field.</summary>
    public const int VSignedIntFieldNumber = 2;
    private readonly static long VSignedIntDefaultValue = 0L;

    private long vSignedInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long VSignedInt
    {
      get { if ((_hasBits0 & 2) != 0) { return vSignedInt_; } else { return VSignedIntDefaultValue; } }
      set
      {
        _hasBits0 |= 2;
        vSignedInt_ = value;
      }
    }
    /// <summary>Gets whether the "v_signed_int" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVSignedInt
    {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "v_signed_int" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVSignedInt()
    {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "v_unsigned_int" field.</summary>
    public const int VUnsignedIntFieldNumber = 3;
    private readonly static ulong VUnsignedIntDefaultValue = 0UL;

    private ulong vUnsignedInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VUnsignedInt
    {
      get { if ((_hasBits0 & 4) != 0) { return vUnsignedInt_; } else { return VUnsignedIntDefaultValue; } }
      set
      {
        _hasBits0 |= 4;
        vUnsignedInt_ = value;
      }
    }
    /// <summary>Gets whether the "v_unsigned_int" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVUnsignedInt
    {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "v_unsigned_int" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVUnsignedInt()
    {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "v_octets" field.</summary>
    public const int VOctetsFieldNumber = 5;
    private global::Mysqlx.Datatypes.Scalar.Types.Octets vOctets_;
    /// <summary>
    /// 4 is unused, was Null which doesn't have a storage anymore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Scalar.Types.Octets VOctets
    {
      get { return vOctets_; }
      set
      {
        vOctets_ = value;
      }
    }

    /// <summary>Field number for the "v_double" field.</summary>
    public const int VDoubleFieldNumber = 6;
    private readonly static double VDoubleDefaultValue = 0D;

    private double vDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double VDouble
    {
      get { if ((_hasBits0 & 8) != 0) { return vDouble_; } else { return VDoubleDefaultValue; } }
      set
      {
        _hasBits0 |= 8;
        vDouble_ = value;
      }
    }
    /// <summary>Gets whether the "v_double" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVDouble
    {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "v_double" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVDouble()
    {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "v_float" field.</summary>
    public const int VFloatFieldNumber = 7;
    private readonly static float VFloatDefaultValue = 0F;

    private float vFloat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VFloat
    {
      get { if ((_hasBits0 & 16) != 0) { return vFloat_; } else { return VFloatDefaultValue; } }
      set
      {
        _hasBits0 |= 16;
        vFloat_ = value;
      }
    }
    /// <summary>Gets whether the "v_float" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVFloat
    {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "v_float" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVFloat()
    {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "v_bool" field.</summary>
    public const int VBoolFieldNumber = 8;
    private readonly static bool VBoolDefaultValue = false;

    private bool vBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VBool
    {
      get { if ((_hasBits0 & 32) != 0) { return vBool_; } else { return VBoolDefaultValue; } }
      set
      {
        _hasBits0 |= 32;
        vBool_ = value;
      }
    }
    /// <summary>Gets whether the "v_bool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVBool
    {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "v_bool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVBool()
    {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "v_string" field.</summary>
    public const int VStringFieldNumber = 9;
    private global::Mysqlx.Datatypes.Scalar.Types.String vString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Scalar.Types.String VString
    {
      get { return vString_; }
      set
      {
        vString_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Scalar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Scalar other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (VSignedInt != other.VSignedInt) return false;
      if (VUnsignedInt != other.VUnsignedInt) return false;
      if (!object.Equals(VOctets, other.VOctets)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VDouble, other.VDouble)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VFloat, other.VFloat)) return false;
      if (VBool != other.VBool) return false;
      if (!object.Equals(VString, other.VString)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasVSignedInt) hash ^= VSignedInt.GetHashCode();
      if (HasVUnsignedInt) hash ^= VUnsignedInt.GetHashCode();
      if (vOctets_ != null) hash ^= VOctets.GetHashCode();
      if (HasVDouble) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VDouble);
      if (HasVFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VFloat);
      if (HasVBool) hash ^= VBool.GetHashCode();
      if (vString_ != null) hash ^= VString.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasVSignedInt) {
        output.WriteRawTag(16);
        output.WriteSInt64(VSignedInt);
      }
      if (HasVUnsignedInt) {
        output.WriteRawTag(24);
        output.WriteUInt64(VUnsignedInt);
      }
      if (vOctets_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VOctets);
      }
      if (HasVDouble) {
        output.WriteRawTag(49);
        output.WriteDouble(VDouble);
      }
      if (HasVFloat) {
        output.WriteRawTag(61);
        output.WriteFloat(VFloat);
      }
      if (HasVBool) {
        output.WriteRawTag(64);
        output.WriteBool(VBool);
      }
      if (vString_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (HasVSignedInt)
      {
        output.WriteRawTag(16);
        output.WriteSInt64(VSignedInt);
      }
      if (HasVUnsignedInt)
      {
        output.WriteRawTag(24);
        output.WriteUInt64(VUnsignedInt);
      }
      if (vOctets_ != null)
      {
        output.WriteRawTag(42);
        output.WriteMessage(VOctets);
      }
      if (HasVDouble)
      {
        output.WriteRawTag(49);
        output.WriteDouble(VDouble);
      }
      if (HasVFloat)
      {
        output.WriteRawTag(61);
        output.WriteFloat(VFloat);
      }
      if (HasVBool)
      {
        output.WriteRawTag(64);
        output.WriteBool(VBool);
      }
      if (vString_ != null)
      {
        output.WriteRawTag(74);
        output.WriteMessage(VString);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (HasVSignedInt)
      {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(VSignedInt);
      }
      if (HasVUnsignedInt)
      {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VUnsignedInt);
      }
      if (vOctets_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VOctets);
      }
      if (HasVDouble)
      {
        size += 1 + 8;
      }
      if (HasVFloat)
      {
        size += 1 + 4;
      }
      if (HasVBool)
      {
        size += 1 + 1;
      }
      if (vString_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VString);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Scalar other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasType)
      {
        Type = other.Type;
      }
      if (other.HasVSignedInt)
      {
        VSignedInt = other.VSignedInt;
      }
      if (other.HasVUnsignedInt)
      {
        VUnsignedInt = other.VUnsignedInt;
      }
      if (other.vOctets_ != null)
      {
        if (vOctets_ == null)
        {
          VOctets = new global::Mysqlx.Datatypes.Scalar.Types.Octets();
        }
        VOctets.MergeFrom(other.VOctets);
      }
      if (other.HasVDouble)
      {
        VDouble = other.VDouble;
      }
      if (other.HasVFloat)
      {
        VFloat = other.VFloat;
      }
      if (other.HasVBool)
      {
        VBool = other.VBool;
      }
      if (other.vString_ != null)
      {
        if (vString_ == null)
        {
          VString = new global::Mysqlx.Datatypes.Scalar.Types.String();
        }
        VString.MergeFrom(other.VString);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Mysqlx.Datatypes.Scalar.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            VSignedInt = input.ReadSInt64();
            break;
          }
          case 24: {
            VUnsignedInt = input.ReadUInt64();
            break;
          }
          case 42: {
            if (vOctets_ == null) {
              VOctets = new global::Mysqlx.Datatypes.Scalar.Types.Octets();
            }
            input.ReadMessage(VOctets);
            break;
          }
          case 49: {
            VDouble = input.ReadDouble();
            break;
          }
          case 61: {
            VFloat = input.ReadFloat();
            break;
          }
          case 64: {
            VBool = input.ReadBool();
            break;
          }
          case 74: {
            if (vString_ == null) {
              VString = new global::Mysqlx.Datatypes.Scalar.Types.String();
            }
            input.ReadMessage(VString);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Mysqlx.Datatypes.Scalar.Types.Type)input.ReadEnum();
              break;
            }
          case 16:
            {
              VSignedInt = input.ReadSInt64();
              break;
            }
          case 24:
            {
              VUnsignedInt = input.ReadUInt64();
              break;
            }
          case 42:
            {
              if (vOctets_ == null)
              {
                VOctets = new global::Mysqlx.Datatypes.Scalar.Types.Octets();
              }
              input.ReadMessage(VOctets);
              break;
            }
          case 49:
            {
              VDouble = input.ReadDouble();
              break;
            }
          case 61:
            {
              VFloat = input.ReadFloat();
              break;
            }
          case 64:
            {
              VBool = input.ReadBool();
              break;
            }
          case 74:
            {
              if (vString_ == null)
              {
                VString = new global::Mysqlx.Datatypes.Scalar.Types.String();
              }
              input.ReadMessage(VString);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the Scalar message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      public enum Type
      {
        [pbr::OriginalName("V_SINT")] VSint = 1,
        [pbr::OriginalName("V_UINT")] VUint = 2,
        [pbr::OriginalName("V_NULL")] VNull = 3,
        [pbr::OriginalName("V_OCTETS")] VOctets = 4,
        [pbr::OriginalName("V_DOUBLE")] VDouble = 5,
        [pbr::OriginalName("V_FLOAT")] VFloat = 6,
        [pbr::OriginalName("V_BOOL")] VBool = 7,
        [pbr::OriginalName("V_STRING")] VString = 8,
      }

      /// <summary>
      ///* a string with a charset/collation 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class String : pb::IMessage<String>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
      {
        private static readonly pb::MessageParser<String> _parser = new pb::MessageParser<String>(() => new String());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<String> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
          get { return global::Mysqlx.Datatypes.Scalar.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public String()
        {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public String(String other) : this()
        {
          _hasBits0 = other._hasBits0;
          value_ = other.value_;
          collation_ = other.collation_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public String Clone()
        {
          return new String(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private readonly static pb::ByteString ValueDefaultValue = pb::ByteString.Empty;

        private pb::ByteString value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Value
        {
          get { return value_ ?? ValueDefaultValue; }
          set
          {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasValue
        {
          get { return value_ != null; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue()
        {
          value_ = null;
        }

        /// <summary>Field number for the "collation" field.</summary>
        public const int CollationFieldNumber = 2;
        private readonly static ulong CollationDefaultValue = 0UL;

        private ulong collation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Collation
        {
          get { if ((_hasBits0 & 1) != 0) { return collation_; } else { return CollationDefaultValue; } }
          set
          {
            _hasBits0 |= 1;
            collation_ = value;
          }
        }
        /// <summary>Gets whether the "collation" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCollation
        {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "collation" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCollation()
        {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
          return Equals(other as String);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(String other)
        {
          if (ReferenceEquals(other, null))
          {
            return false;
          }
          if (ReferenceEquals(other, this))
          {
            return true;
          }
          if (Value != other.Value) return false;
          if (Collation != other.Collation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
          int hash = 1;
          if (HasValue) hash ^= Value.GetHashCode();
          if (HasCollation) hash ^= Collation.GetHashCode();
          if (_unknownFields != null)
          {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
#else
          if (HasValue) {
            output.WriteRawTag(10);
            output.WriteBytes(Value);
          }
          if (HasCollation) {
            output.WriteRawTag(16);
            output.WriteUInt64(Collation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
          if (HasValue)
          {
            output.WriteRawTag(10);
            output.WriteBytes(Value);
          }
          if (HasCollation)
          {
            output.WriteRawTag(16);
            output.WriteUInt64(Collation);
          }
          if (_unknownFields != null)
          {
            _unknownFields.WriteTo(ref output);
          }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
          int size = 0;
          if (HasValue)
          {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
          }
          if (HasCollation)
          {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Collation);
          }
          if (_unknownFields != null)
          {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(String other)
        {
          if (other == null)
          {
            return;
          }
          if (other.HasValue)
          {
            Value = other.Value;
          }
          if (other.HasCollation)
          {
            Collation = other.Collation;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Value = input.ReadBytes();
                break;
              }
              case 16: {
                Collation = input.ReadUInt64();
                break;
              }
            }
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
          uint tag;
          while ((tag = input.ReadTag()) != 0)
          {
            switch (tag)
            {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
                {
                  Value = input.ReadBytes();
                  break;
                }
              case 16:
                {
                  Collation = input.ReadUInt64();
                  break;
                }
            }
          }
        }
#endif

      }

      /// <summary>
      ///* an opaque octet sequence, with an optional content_type
      ///See @ref Mysqlx::Resultset::ContentType_BYTES for list of known values. 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Octets : pb::IMessage<Octets>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
      {
        private static readonly pb::MessageParser<Octets> _parser = new pb::MessageParser<Octets>(() => new Octets());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Octets> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
          get { return global::Mysqlx.Datatypes.Scalar.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Octets()
        {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Octets(Octets other) : this()
        {
          _hasBits0 = other._hasBits0;
          value_ = other.value_;
          contentType_ = other.contentType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Octets Clone()
        {
          return new Octets(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private readonly static pb::ByteString ValueDefaultValue = pb::ByteString.Empty;

        private pb::ByteString value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Value
        {
          get { return value_ ?? ValueDefaultValue; }
          set
          {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasValue
        {
          get { return value_ != null; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue()
        {
          value_ = null;
        }

        /// <summary>Field number for the "content_type" field.</summary>
        public const int ContentTypeFieldNumber = 2;
        private readonly static uint ContentTypeDefaultValue = 0;

        private uint contentType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ContentType
        {
          get { if ((_hasBits0 & 1) != 0) { return contentType_; } else { return ContentTypeDefaultValue; } }
          set
          {
            _hasBits0 |= 1;
            contentType_ = value;
          }
        }
        /// <summary>Gets whether the "content_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasContentType
        {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "content_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearContentType()
        {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
          return Equals(other as Octets);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Octets other)
        {
          if (ReferenceEquals(other, null))
          {
            return false;
          }
          if (ReferenceEquals(other, this))
          {
            return true;
          }
          if (Value != other.Value) return false;
          if (ContentType != other.ContentType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
          int hash = 1;
          if (HasValue) hash ^= Value.GetHashCode();
          if (HasContentType) hash ^= ContentType.GetHashCode();
          if (_unknownFields != null)
          {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
#else
          if (HasValue) {
            output.WriteRawTag(10);
            output.WriteBytes(Value);
          }
          if (HasContentType) {
            output.WriteRawTag(16);
            output.WriteUInt32(ContentType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
          if (HasValue)
          {
            output.WriteRawTag(10);
            output.WriteBytes(Value);
          }
          if (HasContentType)
          {
            output.WriteRawTag(16);
            output.WriteUInt32(ContentType);
          }
          if (_unknownFields != null)
          {
            _unknownFields.WriteTo(ref output);
          }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
          int size = 0;
          if (HasValue)
          {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
          }
          if (HasContentType)
          {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContentType);
          }
          if (_unknownFields != null)
          {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Octets other)
        {
          if (other == null)
          {
            return;
          }
          if (other.HasValue)
          {
            Value = other.Value;
          }
          if (other.HasContentType)
          {
            ContentType = other.ContentType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Value = input.ReadBytes();
                break;
              }
              case 16: {
                ContentType = input.ReadUInt32();
                break;
              }
            }
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
          uint tag;
          while ((tag = input.ReadTag()) != 0)
          {
            switch (tag)
            {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
                {
                  Value = input.ReadBytes();
                  break;
                }
              case 16:
                {
                  ContentType = input.ReadUInt32();
                  break;
                }
            }
          }
        }
#endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  ///An object
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Object : pb::IMessage<Object>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Object> _parser = new pb::MessageParser<Object>(() => new Object());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Object> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Datatypes.MysqlxDatatypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object(Object other) : this()
    {
      fld_ = other.fld_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object Clone()
    {
      return new Object(this);
    }

    /// <summary>Field number for the "fld" field.</summary>
    public const int FldFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mysqlx.Datatypes.Object.Types.ObjectField> _repeated_fld_codec
        = pb::FieldCodec.ForMessage(10, global::Mysqlx.Datatypes.Object.Types.ObjectField.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Datatypes.Object.Types.ObjectField> fld_ = new pbc::RepeatedField<global::Mysqlx.Datatypes.Object.Types.ObjectField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Datatypes.Object.Types.ObjectField> Fld
    {
      get { return fld_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Object);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Object other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!fld_.Equals(other.fld_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= fld_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      fld_.WriteTo(output, _repeated_fld_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      fld_.WriteTo(ref output, _repeated_fld_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      size += fld_.CalculateSize(_repeated_fld_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Object other)
    {
      if (other == null)
      {
        return;
      }
      fld_.Add(other.fld_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fld_.AddEntriesFrom(input, _repeated_fld_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              fld_.AddEntriesFrom(ref input, _repeated_fld_codec);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the Object message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ObjectField : pb::IMessage<ObjectField>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
      {
        private static readonly pb::MessageParser<ObjectField> _parser = new pb::MessageParser<ObjectField>(() => new ObjectField());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ObjectField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
          get { return global::Mysqlx.Datatypes.Object.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField()
        {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField(ObjectField other) : this()
        {
          key_ = other.key_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField Clone()
        {
          return new ObjectField(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private readonly static string KeyDefaultValue = "";

        private string key_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Key
        {
          get { return key_ ?? KeyDefaultValue; }
          set
          {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "key" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasKey
        {
          get { return key_ != null; }
        }
        /// <summary>Clears the value of the "key" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearKey()
        {
          key_ = null;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Mysqlx.Datatypes.Any value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Mysqlx.Datatypes.Any Value
        {
          get { return value_; }
          set
          {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
          return Equals(other as ObjectField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ObjectField other)
        {
          if (ReferenceEquals(other, null))
          {
            return false;
          }
          if (ReferenceEquals(other, this))
          {
            return true;
          }
          if (Key != other.Key) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
          int hash = 1;
          if (HasKey) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null)
          {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
#else
          if (HasKey) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
          if (HasKey)
          {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null)
          {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null)
          {
            _unknownFields.WriteTo(ref output);
          }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
          int size = 0;
          if (HasKey)
          {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (value_ != null)
          {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null)
          {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ObjectField other)
        {
          if (other == null)
          {
            return;
          }
          if (other.HasKey)
          {
            Key = other.Key;
          }
          if (other.value_ != null)
          {
            if (value_ == null)
            {
              Value = new global::Mysqlx.Datatypes.Any();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Mysqlx.Datatypes.Any();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
          uint tag;
          while ((tag = input.ReadTag()) != 0)
          {
            switch (tag)
            {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
                {
                  Key = input.ReadString();
                  break;
                }
              case 18:
                {
                  if (value_ == null)
                  {
                    Value = new global::Mysqlx.Datatypes.Any();
                  }
                  input.ReadMessage(Value);
                  break;
                }
            }
          }
        }
#endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  ///An Array
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Array : pb::IMessage<Array>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Array> _parser = new pb::MessageParser<Array>(() => new Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Datatypes.MysqlxDatatypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array(Array other) : this()
    {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array Clone()
    {
      return new Array(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mysqlx.Datatypes.Any> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::Mysqlx.Datatypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Datatypes.Any> value_ = new pbc::RepeatedField<global::Mysqlx.Datatypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Datatypes.Any> Value
    {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Array other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Array other)
    {
      if (other == null)
      {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              value_.AddEntriesFrom(ref input, _repeated_value_codec);
              break;
            }
        }
      }
    }
#endif

  }

  /// <summary>
  ///*
  ///A helper to allow all field types
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Any : pb::IMessage<Any>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Any> _parser = new pb::MessageParser<Any>(() => new Any());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Any> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Datatypes.MysqlxDatatypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Any()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Any(Any other) : this()
    {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      scalar_ = other.scalar_ != null ? other.scalar_.Clone() : null;
      obj_ = other.obj_ != null ? other.obj_.Clone() : null;
      array_ = other.array_ != null ? other.array_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Any Clone()
    {
      return new Any(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Mysqlx.Datatypes.Any.Types.Type TypeDefaultValue = global::Mysqlx.Datatypes.Any.Types.Type.Scalar;

    private global::Mysqlx.Datatypes.Any.Types.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Any.Types.Type Type
    {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set
      {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType
    {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType()
    {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scalar" field.</summary>
    public const int ScalarFieldNumber = 2;
    private global::Mysqlx.Datatypes.Scalar scalar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Scalar Scalar
    {
      get { return scalar_; }
      set
      {
        scalar_ = value;
      }
    }

    /// <summary>Field number for the "obj" field.</summary>
    public const int ObjFieldNumber = 3;
    private global::Mysqlx.Datatypes.Object obj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Object Obj
    {
      get { return obj_; }
      set
      {
        obj_ = value;
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 4;
    private global::Mysqlx.Datatypes.Array array_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Array Array
    {
      get { return array_; }
      set
      {
        array_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Any);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Any other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Scalar, other.Scalar)) return false;
      if (!object.Equals(Obj, other.Obj)) return false;
      if (!object.Equals(Array, other.Array)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (scalar_ != null) hash ^= Scalar.GetHashCode();
      if (obj_ != null) hash ^= Obj.GetHashCode();
      if (array_ != null) hash ^= Array.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (scalar_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scalar);
      }
      if (obj_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Obj);
      }
      if (array_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Array);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (scalar_ != null)
      {
        output.WriteRawTag(18);
        output.WriteMessage(Scalar);
      }
      if (obj_ != null)
      {
        output.WriteRawTag(26);
        output.WriteMessage(Obj);
      }
      if (array_ != null)
      {
        output.WriteRawTag(34);
        output.WriteMessage(Array);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (scalar_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scalar);
      }
      if (obj_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Obj);
      }
      if (array_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Array);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Any other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasType)
      {
        Type = other.Type;
      }
      if (other.scalar_ != null)
      {
        if (scalar_ == null)
        {
          Scalar = new global::Mysqlx.Datatypes.Scalar();
        }
        Scalar.MergeFrom(other.Scalar);
      }
      if (other.obj_ != null)
      {
        if (obj_ == null)
        {
          Obj = new global::Mysqlx.Datatypes.Object();
        }
        Obj.MergeFrom(other.Obj);
      }
      if (other.array_ != null)
      {
        if (array_ == null)
        {
          Array = new global::Mysqlx.Datatypes.Array();
        }
        Array.MergeFrom(other.Array);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Mysqlx.Datatypes.Any.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (scalar_ == null) {
              Scalar = new global::Mysqlx.Datatypes.Scalar();
            }
            input.ReadMessage(Scalar);
            break;
          }
          case 26: {
            if (obj_ == null) {
              Obj = new global::Mysqlx.Datatypes.Object();
            }
            input.ReadMessage(Obj);
            break;
          }
          case 34: {
            if (array_ == null) {
              Array = new global::Mysqlx.Datatypes.Array();
            }
            input.ReadMessage(Array);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Mysqlx.Datatypes.Any.Types.Type)input.ReadEnum();
              break;
            }
          case 18:
            {
              if (scalar_ == null)
              {
                Scalar = new global::Mysqlx.Datatypes.Scalar();
              }
              input.ReadMessage(Scalar);
              break;
            }
          case 26:
            {
              if (obj_ == null)
              {
                Obj = new global::Mysqlx.Datatypes.Object();
              }
              input.ReadMessage(Obj);
              break;
            }
          case 34:
            {
              if (array_ == null)
              {
                Array = new global::Mysqlx.Datatypes.Array();
              }
              input.ReadMessage(Array);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the Any message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      public enum Type
      {
        [pbr::OriginalName("SCALAR")] Scalar = 1,
        [pbr::OriginalName("OBJECT")] Object = 2,
        [pbr::OriginalName("ARRAY")] Array = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
