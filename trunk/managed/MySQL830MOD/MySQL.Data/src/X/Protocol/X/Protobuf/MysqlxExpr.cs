// Copyright (c) 2022, 2023, Oracle and/or its affiliates.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License, version 2.0, as
// published by the Free Software Foundation.
//
// This program is also distributed with certain software (including
// but not limited to OpenSSL) that is licensed under separate terms,
// as designated in a particular file or component or in included license
// documentation. The authors of MySQL hereby grant you an
// additional permission to link the program and your derivative works
// with the separately licensed software that they have included with
// MySQL.
//
// Without limiting anything contained in the foregoing, this file,
// which is part of MySQL Connector/NET, is also subject to the
// Universal FOSS Exception, version 1.0, a copy of which can be found at
// http://oss.oracle.com/licenses/universal-foss-exception.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License, version 2.0, for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mysqlx_expr.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mysqlx.Expr
{

  /// <summary>Holder for reflection information generated from mysqlx_expr.proto</summary>
  public static partial class MysqlxExprReflection
  {

    #region Descriptor
    /// <summary>File descriptor for mysqlx_expr.proto</summary>
    public static pbr::FileDescriptor Descriptor
    {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MysqlxExprReflection()
    {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFteXNxbHhfZXhwci5wcm90bxILTXlzcWx4LkV4cHIaFm15c3FseF9kYXRh",
            "dHlwZXMucHJvdG8ixAMKBEV4cHISJAoEdHlwZRgBIAIoDjIWLk15c3FseC5F",
            "eHByLkV4cHIuVHlwZRIxCgppZGVudGlmaWVyGAIgASgLMh0uTXlzcWx4LkV4",
            "cHIuQ29sdW1uSWRlbnRpZmllchIQCgh2YXJpYWJsZRgDIAEoCRIpCgdsaXRl",
            "cmFsGAQgASgLMhguTXlzcWx4LkRhdGF0eXBlcy5TY2FsYXISMAoNZnVuY3Rp",
            "b25fY2FsbBgFIAEoCzIZLk15c3FseC5FeHByLkZ1bmN0aW9uQ2FsbBInCghv",
            "cGVyYXRvchgGIAEoCzIVLk15c3FseC5FeHByLk9wZXJhdG9yEhAKCHBvc2l0",
            "aW9uGAcgASgNEiMKBm9iamVjdBgIIAEoCzITLk15c3FseC5FeHByLk9iamVj",
            "dBIhCgVhcnJheRgJIAEoCzISLk15c3FseC5FeHByLkFycmF5InEKBFR5cGUS",
            "CQoFSURFTlQQARILCgdMSVRFUkFMEAISDAoIVkFSSUFCTEUQAxINCglGVU5D",
            "X0NBTEwQBBIMCghPUEVSQVRPUhAFEg8KC1BMQUNFSE9MREVSEAYSCgoGT0JK",
            "RUNUEAcSCQoFQVJSQVkQCCIvCgpJZGVudGlmaWVyEgwKBG5hbWUYASACKAkS",
            "EwoLc2NoZW1hX25hbWUYAiABKAkiywEKEERvY3VtZW50UGF0aEl0ZW0SMAoE",
            "dHlwZRgBIAIoDjIiLk15c3FseC5FeHByLkRvY3VtZW50UGF0aEl0ZW0uVHlw",
            "ZRINCgV2YWx1ZRgCIAEoCRINCgVpbmRleBgDIAEoDSJnCgRUeXBlEgoKBk1F",
            "TUJFUhABEhMKD01FTUJFUl9BU1RFUklTSxACEg8KC0FSUkFZX0lOREVYEAMS",
            "GAoUQVJSQVlfSU5ERVhfQVNURVJJU0sQBBITCg9ET1VCTEVfQVNURVJJU0sQ",
            "BSJ/ChBDb2x1bW5JZGVudGlmaWVyEjQKDWRvY3VtZW50X3BhdGgYASADKAsy",
            "HS5NeXNxbHguRXhwci5Eb2N1bWVudFBhdGhJdGVtEgwKBG5hbWUYAiABKAkS",
            "EgoKdGFibGVfbmFtZRgDIAEoCRITCgtzY2hlbWFfbmFtZRgEIAEoCSJXCgxG",
            "dW5jdGlvbkNhbGwSJQoEbmFtZRgBIAIoCzIXLk15c3FseC5FeHByLklkZW50",
            "aWZpZXISIAoFcGFyYW0YAiADKAsyES5NeXNxbHguRXhwci5FeHByIjoKCE9w",
            "ZXJhdG9yEgwKBG5hbWUYASACKAkSIAoFcGFyYW0YAiADKAsyES5NeXNxbHgu",
            "RXhwci5FeHByInQKBk9iamVjdBIsCgNmbGQYASADKAsyHy5NeXNxbHguRXhw",
            "ci5PYmplY3QuT2JqZWN0RmllbGQaPAoLT2JqZWN0RmllbGQSCwoDa2V5GAEg",
            "AigJEiAKBXZhbHVlGAIgAigLMhEuTXlzcWx4LkV4cHIuRXhwciIpCgVBcnJh",
            "eRIgCgV2YWx1ZRgBIAMoCzIRLk15c3FseC5FeHByLkV4cHJCGQoXY29tLm15",
            "c3FsLmNqLngucHJvdG9idWY="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mysqlx.Datatypes.MysqlxDatatypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Expr), global::Mysqlx.Expr.Expr.Parser, new[]{ "Type", "Identifier", "Variable", "Literal", "FunctionCall", "Operator", "Position", "Object", "Array" }, null, new[]{ typeof(global::Mysqlx.Expr.Expr.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Identifier), global::Mysqlx.Expr.Identifier.Parser, new[]{ "Name", "SchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.DocumentPathItem), global::Mysqlx.Expr.DocumentPathItem.Parser, new[]{ "Type", "Value", "Index" }, null, new[]{ typeof(global::Mysqlx.Expr.DocumentPathItem.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.ColumnIdentifier), global::Mysqlx.Expr.ColumnIdentifier.Parser, new[]{ "DocumentPath", "Name", "TableName", "SchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.FunctionCall), global::Mysqlx.Expr.FunctionCall.Parser, new[]{ "Name", "Param" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Operator), global::Mysqlx.Expr.Operator.Parser, new[]{ "Name", "Param" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Object), global::Mysqlx.Expr.Object.Parser, new[]{ "Fld" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Object.Types.ObjectField), global::Mysqlx.Expr.Object.Types.ObjectField.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mysqlx.Expr.Array), global::Mysqlx.Expr.Array.Parser, new[]{ "Value" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  ///The "root" of the expression tree.
  ///
  ///If expression type is PLACEHOLDER, then it refers to the value
  ///of a parameter specified when executing a statement (see args
  ///field of StmtExecute command). Field position (which must be
  ///present for such an expression) gives 0-based position of the
  ///parameter in the parameter list.
  ///
  ///@par production list
  ///@code{unparsed}
  ///expr: operator |
  ///: identifier |
  ///: function_call |
  ///: variable |
  ///: literal |
  ///: object |
  ///: array |
  ///: placeholder
  ///@endcode
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Expr : pb::IMessage<Expr>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Expr> _parser = new pb::MessageParser<Expr>(() => new Expr());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Expr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Expr()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Expr(Expr other) : this()
    {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      identifier_ = other.identifier_ != null ? other.identifier_.Clone() : null;
      variable_ = other.variable_;
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      functionCall_ = other.functionCall_ != null ? other.functionCall_.Clone() : null;
      operator_ = other.operator_ != null ? other.operator_.Clone() : null;
      position_ = other.position_;
      object_ = other.object_ != null ? other.object_.Clone() : null;
      array_ = other.array_ != null ? other.array_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Expr Clone()
    {
      return new Expr(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Mysqlx.Expr.Expr.Types.Type TypeDefaultValue = global::Mysqlx.Expr.Expr.Types.Type.Ident;

    private global::Mysqlx.Expr.Expr.Types.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.Expr.Types.Type Type
    {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set
      {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType
    {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType()
    {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 2;
    private global::Mysqlx.Expr.ColumnIdentifier identifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.ColumnIdentifier Identifier
    {
      get { return identifier_; }
      set
      {
        identifier_ = value;
      }
    }

    /// <summary>Field number for the "variable" field.</summary>
    public const int VariableFieldNumber = 3;
    private readonly static string VariableDefaultValue = "";

    private string variable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Variable
    {
      get { return variable_ ?? VariableDefaultValue; }
      set
      {
        variable_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "variable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVariable
    {
      get { return variable_ != null; }
    }
    /// <summary>Clears the value of the "variable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVariable()
    {
      variable_ = null;
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 4;
    private global::Mysqlx.Datatypes.Scalar literal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Datatypes.Scalar Literal
    {
      get { return literal_; }
      set
      {
        literal_ = value;
      }
    }

    /// <summary>Field number for the "function_call" field.</summary>
    public const int FunctionCallFieldNumber = 5;
    private global::Mysqlx.Expr.FunctionCall functionCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.FunctionCall FunctionCall
    {
      get { return functionCall_; }
      set
      {
        functionCall_ = value;
      }
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 6;
    private global::Mysqlx.Expr.Operator operator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.Operator Operator
    {
      get { return operator_; }
      set
      {
        operator_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 7;
    private readonly static uint PositionDefaultValue = 0;

    private uint position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Position
    {
      get { if ((_hasBits0 & 2) != 0) { return position_; } else { return PositionDefaultValue; } }
      set
      {
        _hasBits0 |= 2;
        position_ = value;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition
    {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition()
    {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 8;
    private global::Mysqlx.Expr.Object object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.Object Object
    {
      get { return object_; }
      set
      {
        object_ = value;
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 9;
    private global::Mysqlx.Expr.Array array_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.Array Array
    {
      get { return array_; }
      set
      {
        array_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Expr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Expr other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Identifier, other.Identifier)) return false;
      if (Variable != other.Variable) return false;
      if (!object.Equals(Literal, other.Literal)) return false;
      if (!object.Equals(FunctionCall, other.FunctionCall)) return false;
      if (!object.Equals(Operator, other.Operator)) return false;
      if (Position != other.Position) return false;
      if (!object.Equals(Object, other.Object)) return false;
      if (!object.Equals(Array, other.Array)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (identifier_ != null) hash ^= Identifier.GetHashCode();
      if (HasVariable) hash ^= Variable.GetHashCode();
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (functionCall_ != null) hash ^= FunctionCall.GetHashCode();
      if (operator_ != null) hash ^= Operator.GetHashCode();
      if (HasPosition) hash ^= Position.GetHashCode();
      if (object_ != null) hash ^= Object.GetHashCode();
      if (array_ != null) hash ^= Array.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (identifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Identifier);
      }
      if (HasVariable) {
        output.WriteRawTag(26);
        output.WriteString(Variable);
      }
      if (literal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Literal);
      }
      if (functionCall_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FunctionCall);
      }
      if (operator_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Operator);
      }
      if (HasPosition) {
        output.WriteRawTag(56);
        output.WriteUInt32(Position);
      }
      if (object_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Object);
      }
      if (array_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Array);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (identifier_ != null)
      {
        output.WriteRawTag(18);
        output.WriteMessage(Identifier);
      }
      if (HasVariable)
      {
        output.WriteRawTag(26);
        output.WriteString(Variable);
      }
      if (literal_ != null)
      {
        output.WriteRawTag(34);
        output.WriteMessage(Literal);
      }
      if (functionCall_ != null)
      {
        output.WriteRawTag(42);
        output.WriteMessage(FunctionCall);
      }
      if (operator_ != null)
      {
        output.WriteRawTag(50);
        output.WriteMessage(Operator);
      }
      if (HasPosition)
      {
        output.WriteRawTag(56);
        output.WriteUInt32(Position);
      }
      if (object_ != null)
      {
        output.WriteRawTag(66);
        output.WriteMessage(Object);
      }
      if (array_ != null)
      {
        output.WriteRawTag(74);
        output.WriteMessage(Array);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (identifier_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identifier);
      }
      if (HasVariable)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variable);
      }
      if (literal_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (functionCall_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionCall);
      }
      if (operator_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operator);
      }
      if (HasPosition)
      {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Position);
      }
      if (object_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      if (array_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Array);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Expr other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasType)
      {
        Type = other.Type;
      }
      if (other.identifier_ != null)
      {
        if (identifier_ == null)
        {
          Identifier = new global::Mysqlx.Expr.ColumnIdentifier();
        }
        Identifier.MergeFrom(other.Identifier);
      }
      if (other.HasVariable)
      {
        Variable = other.Variable;
      }
      if (other.literal_ != null)
      {
        if (literal_ == null)
        {
          Literal = new global::Mysqlx.Datatypes.Scalar();
        }
        Literal.MergeFrom(other.Literal);
      }
      if (other.functionCall_ != null)
      {
        if (functionCall_ == null)
        {
          FunctionCall = new global::Mysqlx.Expr.FunctionCall();
        }
        FunctionCall.MergeFrom(other.FunctionCall);
      }
      if (other.operator_ != null)
      {
        if (operator_ == null)
        {
          Operator = new global::Mysqlx.Expr.Operator();
        }
        Operator.MergeFrom(other.Operator);
      }
      if (other.HasPosition)
      {
        Position = other.Position;
      }
      if (other.object_ != null)
      {
        if (object_ == null)
        {
          Object = new global::Mysqlx.Expr.Object();
        }
        Object.MergeFrom(other.Object);
      }
      if (other.array_ != null)
      {
        if (array_ == null)
        {
          Array = new global::Mysqlx.Expr.Array();
        }
        Array.MergeFrom(other.Array);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Mysqlx.Expr.Expr.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (identifier_ == null) {
              Identifier = new global::Mysqlx.Expr.ColumnIdentifier();
            }
            input.ReadMessage(Identifier);
            break;
          }
          case 26: {
            Variable = input.ReadString();
            break;
          }
          case 34: {
            if (literal_ == null) {
              Literal = new global::Mysqlx.Datatypes.Scalar();
            }
            input.ReadMessage(Literal);
            break;
          }
          case 42: {
            if (functionCall_ == null) {
              FunctionCall = new global::Mysqlx.Expr.FunctionCall();
            }
            input.ReadMessage(FunctionCall);
            break;
          }
          case 50: {
            if (operator_ == null) {
              Operator = new global::Mysqlx.Expr.Operator();
            }
            input.ReadMessage(Operator);
            break;
          }
          case 56: {
            Position = input.ReadUInt32();
            break;
          }
          case 66: {
            if (object_ == null) {
              Object = new global::Mysqlx.Expr.Object();
            }
            input.ReadMessage(Object);
            break;
          }
          case 74: {
            if (array_ == null) {
              Array = new global::Mysqlx.Expr.Array();
            }
            input.ReadMessage(Array);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Mysqlx.Expr.Expr.Types.Type)input.ReadEnum();
              break;
            }
          case 18:
            {
              if (identifier_ == null)
              {
                Identifier = new global::Mysqlx.Expr.ColumnIdentifier();
              }
              input.ReadMessage(Identifier);
              break;
            }
          case 26:
            {
              Variable = input.ReadString();
              break;
            }
          case 34:
            {
              if (literal_ == null)
              {
                Literal = new global::Mysqlx.Datatypes.Scalar();
              }
              input.ReadMessage(Literal);
              break;
            }
          case 42:
            {
              if (functionCall_ == null)
              {
                FunctionCall = new global::Mysqlx.Expr.FunctionCall();
              }
              input.ReadMessage(FunctionCall);
              break;
            }
          case 50:
            {
              if (operator_ == null)
              {
                Operator = new global::Mysqlx.Expr.Operator();
              }
              input.ReadMessage(Operator);
              break;
            }
          case 56:
            {
              Position = input.ReadUInt32();
              break;
            }
          case 66:
            {
              if (object_ == null)
              {
                Object = new global::Mysqlx.Expr.Object();
              }
              input.ReadMessage(Object);
              break;
            }
          case 74:
            {
              if (array_ == null)
              {
                Array = new global::Mysqlx.Expr.Array();
              }
              input.ReadMessage(Array);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the Expr message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      public enum Type
      {
        [pbr::OriginalName("IDENT")] Ident = 1,
        [pbr::OriginalName("LITERAL")] Literal = 2,
        [pbr::OriginalName("VARIABLE")] Variable = 3,
        [pbr::OriginalName("FUNC_CALL")] FuncCall = 4,
        [pbr::OriginalName("OPERATOR")] Operator = 5,
        [pbr::OriginalName("PLACEHOLDER")] Placeholder = 6,
        [pbr::OriginalName("OBJECT")] Object = 7,
        [pbr::OriginalName("ARRAY")] Array = 8,
      }

    }
    #endregion

  }

  /// <summary>
  ///*
  ///Identifier: name, schame.name
  ///
  ///@par production list
  ///@code{unparsed}
  ///identifier: string "." string |
  ///: string
  ///@endcode
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Identifier : pb::IMessage<Identifier>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier(Identifier other) : this()
    {
      name_ = other.name_;
      schemaName_ = other.schemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier Clone()
    {
      return new Identifier(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name
    {
      get { return name_ ?? NameDefaultValue; }
      set
      {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName
    {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName()
    {
      name_ = null;
    }

    /// <summary>Field number for the "schema_name" field.</summary>
    public const int SchemaNameFieldNumber = 2;
    private readonly static string SchemaNameDefaultValue = "";

    private string schemaName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaName
    {
      get { return schemaName_ ?? SchemaNameDefaultValue; }
      set
      {
        schemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "schema_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSchemaName
    {
      get { return schemaName_ != null; }
    }
    /// <summary>Clears the value of the "schema_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSchemaName()
    {
      schemaName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Identifier other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Name != other.Name) return false;
      if (SchemaName != other.SchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasSchemaName) hash ^= SchemaName.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasSchemaName) {
        output.WriteRawTag(18);
        output.WriteString(SchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasName)
      {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasSchemaName)
      {
        output.WriteRawTag(18);
        output.WriteString(SchemaName);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasSchemaName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaName);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Identifier other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasName)
      {
        Name = other.Name;
      }
      if (other.HasSchemaName)
      {
        SchemaName = other.SchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SchemaName = input.ReadString();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              Name = input.ReadString();
              break;
            }
          case 18:
            {
              SchemaName = input.ReadString();
              break;
            }
        }
      }
    }
#endif

  }

  /// <summary>
  ///*
  ///Document path item
  ///
  ///@par production list
  ///@code{unparsed}
  ///document_path: path_item | path_item document_path
  ///path_item    : member | array_index | "**"
  ///member       : "." string | "." "*"
  ///array_index  : "[" number "]" | "[" "*" "]"
  ///@endcode
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DocumentPathItem : pb::IMessage<DocumentPathItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<DocumentPathItem> _parser = new pb::MessageParser<DocumentPathItem>(() => new DocumentPathItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DocumentPathItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentPathItem()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentPathItem(DocumentPathItem other) : this()
    {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      value_ = other.value_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentPathItem Clone()
    {
      return new DocumentPathItem(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Mysqlx.Expr.DocumentPathItem.Types.Type TypeDefaultValue = global::Mysqlx.Expr.DocumentPathItem.Types.Type.Member;

    private global::Mysqlx.Expr.DocumentPathItem.Types.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.DocumentPathItem.Types.Type Type
    {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set
      {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType
    {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType()
    {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value
    {
      get { return value_ ?? ValueDefaultValue; }
      set
      {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue
    {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue()
    {
      value_ = null;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private readonly static uint IndexDefaultValue = 0;

    private uint index_;
    /// <summary>
    ///* used in case of ARRY_INDEX 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index
    {
      get { if ((_hasBits0 & 2) != 0) { return index_; } else { return IndexDefaultValue; } }
      set
      {
        _hasBits0 |= 2;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex
    {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex()
    {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as DocumentPathItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DocumentPathItem other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasIndex) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (HasValue)
      {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasIndex)
      {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (HasValue)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasIndex)
      {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DocumentPathItem other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasType)
      {
        Type = other.Type;
      }
      if (other.HasValue)
      {
        Value = other.Value;
      }
      if (other.HasIndex)
      {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Mysqlx.Expr.DocumentPathItem.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Mysqlx.Expr.DocumentPathItem.Types.Type)input.ReadEnum();
              break;
            }
          case 18:
            {
              Value = input.ReadString();
              break;
            }
          case 24:
            {
              Index = input.ReadUInt32();
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the DocumentPathItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      public enum Type
      {
        /// <summary>
        ///*  .member 
        /// </summary>
        [pbr::OriginalName("MEMBER")] Member = 1,
        /// <summary>
        ///* \.* 
        /// </summary>
        [pbr::OriginalName("MEMBER_ASTERISK")] MemberAsterisk = 2,
        /// <summary>
        ///* [index] 
        /// </summary>
        [pbr::OriginalName("ARRAY_INDEX")] ArrayIndex = 3,
        /// <summary>
        ///* [*] 
        /// </summary>
        [pbr::OriginalName("ARRAY_INDEX_ASTERISK")] ArrayIndexAsterisk = 4,
        /// <summary>
        ///* ** 
        /// </summary>
        [pbr::OriginalName("DOUBLE_ASTERISK")] DoubleAsterisk = 5,
      }

    }
    #endregion

  }

  /// <summary>
  ///*
  ///Column identifier
  ///
  ///for table: col\@doc_path, tbl.col\@doc_path col, tbl.col, schema.tbl.col
  ///for document collection: doc_path
  /////
  ///@par production list
  ///@code{unparsed}
  ///col_identifier: string "." string "." string |
  ///: string "." string |
  ///: string |
  ///: string "." string "." string "@" document_path |
  ///: string "." string "@" document_path |
  ///: string "@" document_path |
  ///: document_path
  ///document_path: member | arrayLocation | doubleAsterisk
  ///member = "." string | "." "*"
  ///arrayLocation = "[" index "]" | "[" "*" "]"
  ///doubleAsterisk = "**"
  ///@endcode
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ColumnIdentifier : pb::IMessage<ColumnIdentifier>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<ColumnIdentifier> _parser = new pb::MessageParser<ColumnIdentifier>(() => new ColumnIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnIdentifier()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnIdentifier(ColumnIdentifier other) : this()
    {
      documentPath_ = other.documentPath_.Clone();
      name_ = other.name_;
      tableName_ = other.tableName_;
      schemaName_ = other.schemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnIdentifier Clone()
    {
      return new ColumnIdentifier(this);
    }

    /// <summary>Field number for the "document_path" field.</summary>
    public const int DocumentPathFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mysqlx.Expr.DocumentPathItem> _repeated_documentPath_codec
        = pb::FieldCodec.ForMessage(10, global::Mysqlx.Expr.DocumentPathItem.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Expr.DocumentPathItem> documentPath_ = new pbc::RepeatedField<global::Mysqlx.Expr.DocumentPathItem>();
    /// <summary>
    ///* document path 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Expr.DocumentPathItem> DocumentPath
    {
      get { return documentPath_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///* name of column 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name
    {
      get { return name_ ?? NameDefaultValue; }
      set
      {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName
    {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName()
    {
      name_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    /// <summary>
    ///* name of table 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableName
    {
      get { return tableName_ ?? TableNameDefaultValue; }
      set
      {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableName
    {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableName()
    {
      tableName_ = null;
    }

    /// <summary>Field number for the "schema_name" field.</summary>
    public const int SchemaNameFieldNumber = 4;
    private readonly static string SchemaNameDefaultValue = "";

    private string schemaName_;
    /// <summary>
    ///* name of schema 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaName
    {
      get { return schemaName_ ?? SchemaNameDefaultValue; }
      set
      {
        schemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "schema_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSchemaName
    {
      get { return schemaName_ != null; }
    }
    /// <summary>Clears the value of the "schema_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSchemaName()
    {
      schemaName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as ColumnIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnIdentifier other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!documentPath_.Equals(other.documentPath_)) return false;
      if (Name != other.Name) return false;
      if (TableName != other.TableName) return false;
      if (SchemaName != other.SchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= documentPath_.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasSchemaName) hash ^= SchemaName.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      documentPath_.WriteTo(output, _repeated_documentPath_codec);
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasTableName) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasSchemaName) {
        output.WriteRawTag(34);
        output.WriteString(SchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      documentPath_.WriteTo(ref output, _repeated_documentPath_codec);
      if (HasName)
      {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasTableName)
      {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasSchemaName)
      {
        output.WriteRawTag(34);
        output.WriteString(SchemaName);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      size += documentPath_.CalculateSize(_repeated_documentPath_codec);
      if (HasName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasTableName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasSchemaName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaName);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnIdentifier other)
    {
      if (other == null)
      {
        return;
      }
      documentPath_.Add(other.documentPath_);
      if (other.HasName)
      {
        Name = other.Name;
      }
      if (other.HasTableName)
      {
        TableName = other.TableName;
      }
      if (other.HasSchemaName)
      {
        SchemaName = other.SchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            documentPath_.AddEntriesFrom(input, _repeated_documentPath_codec);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 34: {
            SchemaName = input.ReadString();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              documentPath_.AddEntriesFrom(ref input, _repeated_documentPath_codec);
              break;
            }
          case 18:
            {
              Name = input.ReadString();
              break;
            }
          case 26:
            {
              TableName = input.ReadString();
              break;
            }
          case 34:
            {
              SchemaName = input.ReadString();
              break;
            }
        }
      }
    }
#endif

  }

  /// <summary>
  ///*
  ///Function call: ``func(a, b, "1", 3)``
  ///
  ///@par production list
  ///@code{unparsed}
  ///function_call: `identifier` "(" [ `expr` ["," `expr` ]* ] ")"
  ///@endcode
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FunctionCall : pb::IMessage<FunctionCall>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<FunctionCall> _parser = new pb::MessageParser<FunctionCall>(() => new FunctionCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FunctionCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FunctionCall()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FunctionCall(FunctionCall other) : this()
    {
      name_ = other.name_ != null ? other.name_.Clone() : null;
      param_ = other.param_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FunctionCall Clone()
    {
      return new FunctionCall(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private global::Mysqlx.Expr.Identifier name_;
    /// <summary>
    ///* identifier of function; at least name of it 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mysqlx.Expr.Identifier Name
    {
      get { return name_; }
      set
      {
        name_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mysqlx.Expr.Expr> _repeated_param_codec
        = pb::FieldCodec.ForMessage(18, global::Mysqlx.Expr.Expr.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Expr.Expr> param_ = new pbc::RepeatedField<global::Mysqlx.Expr.Expr>();
    /// <summary>
    ///* list of parameters 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Expr.Expr> Param
    {
      get { return param_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as FunctionCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FunctionCall other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!object.Equals(Name, other.Name)) return false;
      if (!param_.Equals(other.param_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (name_ != null) hash ^= Name.GetHashCode();
      hash ^= param_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (name_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Name);
      }
      param_.WriteTo(output, _repeated_param_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (name_ != null)
      {
        output.WriteRawTag(10);
        output.WriteMessage(Name);
      }
      param_.WriteTo(ref output, _repeated_param_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (name_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      size += param_.CalculateSize(_repeated_param_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FunctionCall other)
    {
      if (other == null)
      {
        return;
      }
      if (other.name_ != null)
      {
        if (name_ == null)
        {
          Name = new global::Mysqlx.Expr.Identifier();
        }
        Name.MergeFrom(other.Name);
      }
      param_.Add(other.param_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (name_ == null) {
              Name = new global::Mysqlx.Expr.Identifier();
            }
            input.ReadMessage(Name);
            break;
          }
          case 18: {
            param_.AddEntriesFrom(input, _repeated_param_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              if (name_ == null)
              {
                Name = new global::Mysqlx.Expr.Identifier();
              }
              input.ReadMessage(Name);
              break;
            }
          case 18:
            {
              param_.AddEntriesFrom(ref input, _repeated_param_codec);
              break;
            }
        }
      }
    }
#endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Operator : pb::IMessage<Operator>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Operator> _parser = new pb::MessageParser<Operator>(() => new Operator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Operator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Operator()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Operator(Operator other) : this()
    {
      name_ = other.name_;
      param_ = other.param_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Operator Clone()
    {
      return new Operator(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///* name of operator 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name
    {
      get { return name_ ?? NameDefaultValue; }
      set
      {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName
    {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName()
    {
      name_ = null;
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mysqlx.Expr.Expr> _repeated_param_codec
        = pb::FieldCodec.ForMessage(18, global::Mysqlx.Expr.Expr.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Expr.Expr> param_ = new pbc::RepeatedField<global::Mysqlx.Expr.Expr>();
    /// <summary>
    ///* list of parameters 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Expr.Expr> Param
    {
      get { return param_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Operator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Operator other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Name != other.Name) return false;
      if (!param_.Equals(other.param_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= param_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      param_.WriteTo(output, _repeated_param_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (HasName)
      {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      param_.WriteTo(ref output, _repeated_param_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      if (HasName)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += param_.CalculateSize(_repeated_param_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Operator other)
    {
      if (other == null)
      {
        return;
      }
      if (other.HasName)
      {
        Name = other.Name;
      }
      param_.Add(other.param_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            param_.AddEntriesFrom(input, _repeated_param_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              Name = input.ReadString();
              break;
            }
          case 18:
            {
              param_.AddEntriesFrom(ref input, _repeated_param_codec);
              break;
            }
        }
      }
    }
#endif

  }

  /// <summary>
  ///*
  ///An object (with expression values)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Object : pb::IMessage<Object>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Object> _parser = new pb::MessageParser<Object>(() => new Object());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Object> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object(Object other) : this()
    {
      fld_ = other.fld_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Object Clone()
    {
      return new Object(this);
    }

    /// <summary>Field number for the "fld" field.</summary>
    public const int FldFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mysqlx.Expr.Object.Types.ObjectField> _repeated_fld_codec
        = pb::FieldCodec.ForMessage(10, global::Mysqlx.Expr.Object.Types.ObjectField.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Expr.Object.Types.ObjectField> fld_ = new pbc::RepeatedField<global::Mysqlx.Expr.Object.Types.ObjectField>();
    /// <summary>
    ///* list of fields 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Expr.Object.Types.ObjectField> Fld
    {
      get { return fld_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Object);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Object other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!fld_.Equals(other.fld_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= fld_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      fld_.WriteTo(output, _repeated_fld_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      fld_.WriteTo(ref output, _repeated_fld_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      size += fld_.CalculateSize(_repeated_fld_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Object other)
    {
      if (other == null)
      {
        return;
      }
      fld_.Add(other.fld_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fld_.AddEntriesFrom(input, _repeated_fld_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              fld_.AddEntriesFrom(ref input, _repeated_fld_codec);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the Object message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types
    {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ObjectField : pb::IMessage<ObjectField>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
      {
        private static readonly pb::MessageParser<ObjectField> _parser = new pb::MessageParser<ObjectField>(() => new ObjectField());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ObjectField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
          get { return global::Mysqlx.Expr.Object.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField()
        {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField(ObjectField other) : this()
        {
          key_ = other.key_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObjectField Clone()
        {
          return new ObjectField(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private readonly static string KeyDefaultValue = "";

        private string key_;
        /// <summary>
        ///* identifier of field 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Key
        {
          get { return key_ ?? KeyDefaultValue; }
          set
          {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "key" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasKey
        {
          get { return key_ != null; }
        }
        /// <summary>Clears the value of the "key" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearKey()
        {
          key_ = null;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Mysqlx.Expr.Expr value_;
        /// <summary>
        ///* value of field 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Mysqlx.Expr.Expr Value
        {
          get { return value_; }
          set
          {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
          return Equals(other as ObjectField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ObjectField other)
        {
          if (ReferenceEquals(other, null))
          {
            return false;
          }
          if (ReferenceEquals(other, this))
          {
            return true;
          }
          if (Key != other.Key) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
          int hash = 1;
          if (HasKey) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null)
          {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
#else
          if (HasKey) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
          if (HasKey)
          {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null)
          {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null)
          {
            _unknownFields.WriteTo(ref output);
          }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
          int size = 0;
          if (HasKey)
          {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (value_ != null)
          {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null)
          {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ObjectField other)
        {
          if (other == null)
          {
            return;
          }
          if (other.HasKey)
          {
            Key = other.Key;
          }
          if (other.value_ != null)
          {
            if (value_ == null)
            {
              Value = new global::Mysqlx.Expr.Expr();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Mysqlx.Expr.Expr();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
          uint tag;
          while ((tag = input.ReadTag()) != 0)
          {
            switch (tag)
            {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
                {
                  Key = input.ReadString();
                  break;
                }
              case 18:
                {
                  if (value_ == null)
                  {
                    Value = new global::Mysqlx.Expr.Expr();
                  }
                  input.ReadMessage(Value);
                  break;
                }
            }
          }
        }
#endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  ///An array of expressions
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Array : pb::IMessage<Array>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<Array> _parser = new pb::MessageParser<Array>(() => new Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Mysqlx.Expr.MysqlxExprReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array(Array other) : this()
    {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Array Clone()
    {
      return new Array(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mysqlx.Expr.Expr> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::Mysqlx.Expr.Expr.Parser);
    private readonly pbc::RepeatedField<global::Mysqlx.Expr.Expr> value_ = new pbc::RepeatedField<global::Mysqlx.Expr.Expr>();
    /// <summary>
    ///* list of values 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mysqlx.Expr.Expr> Value
    {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other)
    {
      return Equals(other as Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Array other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize()
    {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Array other)
    {
      if (other == null)
      {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              value_.AddEntriesFrom(ref input, _repeated_value_codec);
              break;
            }
        }
      }
    }
#endif

  }

  #endregion

}

#endregion Designer generated code
